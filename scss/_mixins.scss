
@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
      @if $fs-breakpoint == null {
        font-size: $fs-font-size;
      }
      @else {
        // If $fs-font-size is a key that exists in
        // $fs-breakpoints, use the value
        @if map-has-key($fs-breakpoints, $fs-breakpoint) {
          $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
        }
        @media screen and (min-width: $fs-breakpoint) {
          font-size: $fs-font-size;
        }
      }
    }
  }


// transiton mixin
@mixin transition($property:all, $time:300ms){
    transition: $property $time ease-in-out;
}
// box-shadow
@mixin box-shadow($x-offset:0px, $y-offset:5px, $blur:10px, $opacity:0.15){
    box-shadow: $x-offset $y-offset $blur rgba(0,0,0, $opacity);
}
//   media queries mixin
@mixin xs {
    @media screen and (min-width: map-get($breakpoints, 'xs')){
        @content;
    }
}
@mixin sm {
    @media screen and (min-width: map-get($breakpoints, 'sm')){
        @content;
    }
}
@mixin md {
    @media screen and (min-width: map-get($breakpoints, 'md')){
        @content;
    }
}
@mixin lg {
    @media screen and (min-width: map-get($breakpoints, 'lg')){
        @content;
    }
}
@mixin xl {
    @media screen and (min-width: map-get($breakpoints, 'xl')){
        @content;
    }
}

// btn mixin
@mixin btn($bg, $text){
    display: inline-block;
    background:$bg;
    color: $text;
    padding:10px 20px;
    border-radius: $base-border-radius * 1;
    outline:1px solid transparent;
    @include box-shadow;
    @include transition;
    &.btn-outline{
        background:transparent;
        border: 1px solid $bg;
        color: $bg;
    }
    &:hover{
        background:$bg;
        filter:drop-shadow(0px 2px 5px $bg);
        color:$text;
    }
    
}
// pseudo element mixin
@mixin pseudo{
    content: '';
    position: absolute;
    inset:0;
}
// project-image mixin
@mixin project-image($image){
    position: relative;
    width:100%;
    height:200px;
    background: $white;
    border-radius:$base-border-radius * 2;
    overflow: hidden;
    &::before{
       @include pseudo;
        background: $image center/cover;
        @include transition;
    }
    &:hover::before{
        filter:saturate(1.5);
        transform: scale(1.1);
    }
}
// function for text-color with respect to background
@function text-color($bg){
    @if(lightness($bg) > 50){
        @return $primary;
    }@else{
        @return $white;
    }
}
// mixin for bg and text color dynamically
@mixin dynamicColor($color){
    background:$color;
    color:text-color($color);
}
// section bg
@mixin bg-gradient($color1, $color2){
    background:linear-gradient(160deg, $color1 0%, $color2 100%)
}

